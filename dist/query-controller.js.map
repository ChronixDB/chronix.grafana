{"version":3,"sources":["../src/query-controller.js"],"names":["isInt","n","parseInt","QueryCtrl","_","ChronixDbQueryController","$scope","$injector","panel","stack","downsampling","target","sampling","suggestAttributes","query","callback","datasource","then","getTextValues","bind","suggestTagValues","suggestAttributesValues","name","currentTagKey","suggestTagAttributes","suggestMetrics","findTimeSeriesByNames","validateTarget","getCollapsedText","errs","convertToChronixInterval","err","message","errors","isEqual","oldTarget","isEmpty","angular","copy","panelCtrl","refresh","metricFindResult","map","value","text","console","info","attributes","currentAttributeKey","attribute","index","indexOf","splice","size","targetBlur","addJoinAttributeMode","validateJoinAttributes","push","addFilterTagMode","validateFilterTag","tags","has","currentTagValue","key","addGroupByMode","currentGroupByType","isTagGroupBy","validateGroupBy","groupBy","groupByTags","contains","tagKey","nonTagGroupBys","isValueGroupBy","range_size","valueRange","isTimeGroupBy","timeInterval","group_count","groupCount","values","isGroupByValid","addHorizontalAggregatorMode","currentHorizontalAggregatorName","hasSamplingRate","validateHorizontalAggregator","horAggregator","horizontalAggregators","aggregator","sampling_rate","samplingRate","hasUnit","unit","hasFactor","factor","hasPercentile","percentile","isAggregatorValid","alert","templateUrl"],"mappings":"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","file":"query-controller.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\n\r\nfunction isInt (n) {\r\n    return parseInt(n) % 1 === 0;\r\n}\r\n\r\nexport class ChronixDbQueryController extends QueryCtrl {\r\n\r\n    constructor ($scope, $injector) {\r\n        super($scope, $injector);\r\n\r\n        this.panel.stack = false;\r\n\r\n        if (!this.panel.downsampling) {\r\n            this.panel.downsampling = 'avg';\r\n        }\r\n\r\n        if (!this.target.downsampling) {\r\n            this.target.downsampling = this.panel.downsampling;\r\n            this.target.sampling = this.panel.sampling;\r\n        }\r\n\r\n        /**\r\n         * Is called if someone types something into a key field of an attribute.\r\n         */\r\n        this.suggestAttributes = (query, callback) => {\r\n            this.datasource.suggestAttributes()\r\n                .then(this.getTextValues.bind(this))\r\n                .then(callback);\r\n        };\r\n\r\n        /**\r\n         * Is called if someone types something into a value field of an attribute.\r\n         */\r\n        this.suggestTagValues = (query, callback) => {\r\n            this.datasource.suggestAttributesValues(this.target.name, this.target.currentTagKey)\r\n                .then(this.getTextValues.bind(this))\r\n                .then(callback);\r\n        };\r\n\r\n        /**\r\n         * Is called if someone types something into a key field of an attribute.\r\n         */\r\n        this.suggestTagAttributes = (query, callback) => {\r\n            this.datasource.suggestAttributes(query)\r\n                .then(this.getTextValues.bind(this))\r\n                .then(callback);\r\n        };\r\n\r\n        this.suggestMetrics = (query, callback) => {\r\n            this.datasource.findTimeSeriesByNames(query)\r\n                .then(this.getTextValues.bind(this))\r\n                .then(callback);\r\n        };\r\n\r\n        this.validateTarget();\r\n\r\n        this.getCollapsedText = () => {\r\n            return 'Expand to configure Chronix Query data source';\r\n        };\r\n    }\r\n\r\n    validateTarget () {\r\n        var errs = {};\r\n\r\n        if (!this.target.name) {\r\n            errs.name = \"You must supply a time series name.\";\r\n        }\r\n\r\n        try {\r\n            if (this.target.sampling) {\r\n                this.datasource.convertToChronixInterval(this.target.sampling);\r\n            }\r\n        } catch (err) {\r\n            errs.sampling = err.message;\r\n        }\r\n\r\n        this.target.errors = errs;\r\n    }\r\n\r\n    targetBlur () {\r\n        this.validateTarget();\r\n\r\n        if (!_.isEqual(this.oldTarget, this.target) && _.isEmpty(this.target.errors)) {\r\n            this.oldTarget = angular.copy(this.target);\r\n            this.panelCtrl.refresh();\r\n        }\r\n    };\r\n\r\n    getTextValues (metricFindResult) {\r\n        return _.map(metricFindResult, function (value) {\r\n            return value.text;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * =========================================================================\r\n     *\r\n     *  Join section\r\n     *\r\n     * =========================================================================\r\n     */\r\n\r\n    /**\r\n     * Is called if someone types something into the join by box\r\n     * @param query\r\n     * @param callback\r\n     */\r\n    addJoinByAttribute (query, callback) {\r\n        console.info(\"add join by attribute is called for \" + query);\r\n\r\n        this.datasource.suggestAttributes(query)\r\n            .then(this.getTextValues.bind(this))\r\n            .then(callback);\r\n    };\r\n\r\n    validateJoinAttributes () {\r\n        console.info(\"validateJoinAttributes is called\");\r\n        this.target.errors.attributes = null;\r\n        if (!this.target.currentAttributeKey) {\r\n            this.target.errors.attributes = \"You must specify a tag name and value.\";\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Is calls if someone removes a group by tag\r\n     * @param attribute\r\n     */\r\n    removeJoinByAttribute (attribute) {\r\n        console.info(\"removeJoinByAttribute is called for \" + attribute);\r\n\r\n        var index = this.target.attributes.indexOf(attribute);\r\n\r\n        this.target.attributes.splice(index, 1);\r\n\r\n        if (_.size(this.target.attributes) === 0) {\r\n            this.target.attributes = null;\r\n        }\r\n        this.targetBlur();\r\n    };\r\n\r\n    /**\r\n     * Add join by attribute\r\n     */\r\n    addJoinByAttribute () {\r\n        console.info(\"addJoinByAttribute is called\");\r\n        if (!this.panel.addJoinAttributeMode) {\r\n            this.panel.addJoinAttributeMode = true;\r\n            this.validateJoinAttributes();\r\n            return;\r\n        }\r\n\r\n        if (!this.target.attributes) {\r\n            this.target.attributes = [];\r\n        }\r\n\r\n        this.validateJoinAttributes();\r\n        if (!this.target.errors.attributes) {\r\n            this.target.attributes.push(this.target.currentAttributeKey);\r\n            this.target.currentAttributeKey = '';\r\n\r\n            this.targetBlur();\r\n        }\r\n\r\n        this.panel.addJoinAttributeMode = false;\r\n    };\r\n\r\n    // Filter metric by tag\r\n    addFilterTag () {\r\n        if (!this.panel.addFilterTagMode) {\r\n            this.panel.addFilterTagMode = true;\r\n            this.validateFilterTag();\r\n            return;\r\n        }\r\n\r\n        if (!this.target.tags) {\r\n            this.target.tags = {};\r\n        }\r\n\r\n        this.validateFilterTag();\r\n        if (!this.target.errors.tags) {\r\n            if (!_.has(this.target.tags, this.target.currentTagKey)) {\r\n                this.target.tags[this.target.currentTagKey] = [];\r\n            }\r\n            this.target.tags[this.target.currentTagKey].push(this.target.currentTagValue);\r\n            this.target.currentTagKey = '';\r\n            this.target.currentTagValue = '';\r\n            this.targetBlur();\r\n        }\r\n\r\n        this.panel.addFilterTagMode = false;\r\n    };\r\n\r\n    removeFilterTag (key) {\r\n        delete this.target.tags[key];\r\n        if (_.size(this.target.tags) === 0) {\r\n            this.target.tags = null;\r\n        }\r\n        this.targetBlur();\r\n    };\r\n\r\n    validateFilterTag () {\r\n        this.target.errors.tags = null;\r\n        if (!this.target.currentTagKey || !this.target.currentTagValue) {\r\n            this.target.errors.tags = \"You must specify a tag name and value.\";\r\n        }\r\n    };\r\n\r\n    //////////////////////////////\r\n    // GROUP BY\r\n    //////////////////////////////\r\n    addGroupBy () {\r\n        if (!this.panel.addGroupByMode) {\r\n            this.target.currentGroupByType = 'tag';\r\n            this.panel.addGroupByMode = true;\r\n            this.panel.isTagGroupBy = true;\r\n            this.validateGroupBy();\r\n            return;\r\n        }\r\n        this.validateGroupBy();\r\n        // nb: if error is found, means that user clicked on cross : cancels input\r\n\r\n        if (_.isEmpty(this.target.errors.groupBy)) {\r\n            if (this.panel.isTagGroupBy) {\r\n                if (!this.target.groupByTags) {\r\n                    this.target.groupByTags = [];\r\n                }\r\n                if (!_.contains(this.target.groupByTags, this.target.groupBy.tagKey)) {\r\n                    this.target.groupByTags.push(this.target.groupBy.tagKey);\r\n                    this.targetBlur();\r\n                }\r\n                this.target.groupBy.tagKey = '';\r\n            }\r\n            else {\r\n                if (!this.target.nonTagGroupBys) {\r\n                    this.target.nonTagGroupBys = [];\r\n                }\r\n                var groupBy = {\r\n                    name: this.target.currentGroupByType\r\n                };\r\n                if (this.panel.isValueGroupBy) {\r\n                    groupBy.range_size = this.target.groupBy.valueRange;\r\n                } else if (this.panel.isTimeGroupBy) {\r\n                    groupBy.range_size = this.target.groupBy.timeInterval;\r\n                    groupBy.group_count = this.target.groupBy.groupCount;\r\n                }\r\n                this.target.nonTagGroupBys.push(groupBy);\r\n            }\r\n            this.targetBlur();\r\n        }\r\n\r\n        this.panel.isTagGroupBy = false;\r\n        this.panel.isValueGroupBy = false;\r\n        this.panel.isTimeGroupBy = false;\r\n        this.panel.addGroupByMode = false;\r\n    };\r\n\r\n    removeGroupByTag (index) {\r\n        this.target.groupByTags.splice(index, 1);\r\n        if (_.size(this.target.groupByTags) === 0) {\r\n            this.target.groupByTags = null;\r\n        }\r\n        this.targetBlur();\r\n    };\r\n\r\n    removeNonTagGroupBy (index) {\r\n        this.target.nonTagGroupBys.splice(index, 1);\r\n        if (_.size(this.target.nonTagGroupBys) === 0) {\r\n            this.target.nonTagGroupBys = null;\r\n        }\r\n        this.targetBlur();\r\n    };\r\n\r\n    changeGroupByInput () {\r\n        this.panel.isTagGroupBy = this.target.currentGroupByType === 'tag';\r\n        this.panel.isValueGroupBy = this.target.currentGroupByType === 'value';\r\n        this.panel.isTimeGroupBy = this.target.currentGroupByType === 'time';\r\n        this.validateGroupBy();\r\n    };\r\n\r\n    getValuesOfGroupBy (groupBy) {\r\n        return _.values(groupBy);\r\n    };\r\n\r\n    validateGroupBy () {\r\n        delete this.target.errors.groupBy;\r\n        var errors = {};\r\n        this.panel.isGroupByValid = true;\r\n        if (this.panel.isTagGroupBy) {\r\n            if (!this.target.groupBy.tagKey) {\r\n                this.panel.isGroupByValid = false;\r\n                errors.tagKey = 'You must supply a tag name';\r\n            }\r\n        }\r\n\r\n        if (this.panel.isValueGroupBy) {\r\n            if (!this.target.groupBy.valueRange || !isInt(this.target.groupBy.valueRange)) {\r\n                errors.valueRange = \"Range must be an integer\";\r\n                this.isGroupByValid = false;\r\n            }\r\n        }\r\n\r\n        if (this.panel.isTimeGroupBy) {\r\n            try {\r\n                this.datasource.convertToChronixInterval(this.target.groupBy.timeInterval);\r\n            } catch (err) {\r\n                errors.timeInterval = err.message;\r\n                this.isGroupByValid = false;\r\n            }\r\n            if (!this.target.groupBy.groupCount || !isInt(this.target.groupBy.groupCount)) {\r\n                errors.groupCount = \"Group count must be an integer\";\r\n                this.isGroupByValid = false;\r\n            }\r\n        }\r\n\r\n        if (!_.isEmpty(errors)) {\r\n            this.target.errors.groupBy = errors;\r\n        }\r\n    };\r\n\r\n    //////////////////////////////\r\n    // HORIZONTAL AGGREGATION\r\n    //////////////////////////////\r\n\r\n    addHorizontalAggregator () {\r\n        if (!this.panel.addHorizontalAggregatorMode) {\r\n            this.panel.addHorizontalAggregatorMode = true;\r\n            this.target.currentHorizontalAggregatorName = 'avg';\r\n            this.panel.hasSamplingRate = true;\r\n            this.validateHorizontalAggregator();\r\n            return;\r\n        }\r\n\r\n        this.validateHorizontalAggregator();\r\n        // nb: if error is found, means that user clicked on cross : cancels input\r\n        if (_.isEmpty(this.target.errors.horAggregator)) {\r\n            if (!this.target.horizontalAggregators) {\r\n                this.target.horizontalAggregators = [];\r\n            }\r\n            var aggregator = {\r\n                name: this.target.currentHorizontalAggregatorName\r\n            };\r\n            if (this.panel.hasSamplingRate) {\r\n                aggregator.sampling_rate = this.target.horAggregator.samplingRate;\r\n            }\r\n            if (this.panel.hasUnit) {\r\n                aggregator.unit = this.target.horAggregator.unit;\r\n            }\r\n            if (this.panel.hasFactor) {\r\n                aggregator.factor = this.target.horAggregator.factor;\r\n            }\r\n            if (this.panel.hasPercentile) {\r\n                aggregator.percentile = this.target.horAggregator.percentile;\r\n            }\r\n            this.target.horizontalAggregators.push(aggregator);\r\n            this.targetBlur();\r\n        }\r\n\r\n        this.panel.addHorizontalAggregatorMode = false;\r\n        this.panel.hasSamplingRate = false;\r\n        this.panel.hasUnit = false;\r\n        this.panel.hasFactor = false;\r\n        this.panel.hasPercentile = false;\r\n    };\r\n\r\n    removeHorizontalAggregator (index) {\r\n        this.target.horizontalAggregators.splice(index, 1);\r\n        if (_.size(this.target.horizontalAggregators) === 0) {\r\n            this.target.horizontalAggregators = null;\r\n        }\r\n\r\n        this.targetBlur();\r\n    };\r\n\r\n    changeHorAggregationInput () {\r\n        this.panel.hasSamplingRate = _.contains(['avg', 'dev', 'max', 'min', 'sum', 'least_squares', 'count', 'percentile'],\r\n            this.target.currentHorizontalAggregatorName);\r\n        this.panel.hasUnit = _.contains(['sampler', 'rate'], this.target.currentHorizontalAggregatorName);\r\n        this.panel.hasFactor = _.contains(['div', 'scale'], this.target.currentHorizontalAggregatorName);\r\n        this.panel.hasPercentile = 'percentile' === this.target.currentHorizontalAggregatorName;\r\n        this.validateHorizontalAggregator();\r\n    };\r\n\r\n    validateHorizontalAggregator () {\r\n        delete this.target.errors.horAggregator;\r\n        var errors = {};\r\n        this.panel.isAggregatorValid = true;\r\n\r\n        if (this.panel.hasSamplingRate) {\r\n            try {\r\n                this.datasource.convertToChronixInterval(this.target.horAggregator.samplingRate);\r\n            } catch (err) {\r\n                errors.samplingRate = err.message;\r\n                this.panel.isAggregatorValid = false;\r\n            }\r\n        }\r\n\r\n        if (this.hasFactor) {\r\n            if (!this.target.horAggregator.factor) {\r\n                errors.factor = 'You must supply a numeric value for this aggregator';\r\n                this.panel.isAggregatorValid = false;\r\n            }\r\n            else if (parseInt(this.target.horAggregator.factor) === 0 && this.target.currentHorizontalAggregatorName === 'div') {\r\n                errors.factor = 'Cannot divide by 0';\r\n                this.panel.isAggregatorValid = false;\r\n            }\r\n        }\r\n\r\n        if (this.panel.hasPercentile) {\r\n            if (!this.target.horAggregator.percentile ||\r\n                this.target.horAggregator.percentile <= 0 ||\r\n                this.target.horAggregator.percentile > 1) {\r\n                errors.percentile = 'Percentile must be between 0 and 1';\r\n                this.panel.isAggregatorValid = false;\r\n            }\r\n        }\r\n\r\n        if (!_.isEmpty(errors)) {\r\n            this.target.errors.horAggregator = errors;\r\n        }\r\n    };\r\n\r\n    alert (message) {\r\n        alert(message);\r\n    };\r\n\r\n}\r\n\r\nChronixDbQueryController.templateUrl = 'partials/query.editor.html';\r\n"]}